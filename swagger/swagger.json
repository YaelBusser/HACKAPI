{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "Documentation de l'API hackapi"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Serveur local"
    }
  ],
  "paths": {
    "/access-features/grant": {
      "post": {
        "summary": "Grant permission to a user for a feature",
        "tags": [
          "Access Features"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_feature": {
                    "type": "integer",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "user123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission granted successfully."
          },
          "400": {
            "description": "Bad request - missing parameters or invalid feature ID."
          },
          "404": {
            "description": "User or feature not found."
          },
          "409": {
            "description": "Permission already granted."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/access-features/revoke": {
      "delete": {
        "summary": "Revoke permission from a user for a feature",
        "tags": [
          "Access Features"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_feature": {
                    "type": "integer",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "user123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permission revoked successfully."
          },
          "400": {
            "description": "Bad request - missing parameters or invalid feature ID."
          },
          "404": {
            "description": "User or access not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/access-features": {
      "get": {
        "summary": "Get all features and their associated users",
        "tags": [
          "Access Features"
        ],
        "responses": {
          "200": {
            "description": "A list of features with their users."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/Logs": {
      "get": {
        "summary": "Retrieve Logs",
        "tags": [
          "Logs"
        ],
        "description": "Fetches a list of Logs filtered by username or feature ID, or both. If no filter is provided, returns the most recent Logs.",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "description": "Username to filter Logs"
          },
          {
            "in": "query",
            "name": "id_feature",
            "schema": {
              "type": "integer"
            },
            "description": "Feature ID to filter Logs"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "id_user": {
                        "type": "integer"
                      },
                      "id_feature": {
                        "type": "integer"
                      },
                      "action": {
                        "type": "string"
                      },
                      "date_log": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameter"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "summary": "User registration",
        "tags": [
          "User"
        ],
        "description": "Creates a new user with the client role.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful"
          },
          "403": {
            "description": "User already exists"
          },
          "500": {
            "description": "Server error during registration"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "User"
        ],
        "description": "Authenticates a user and returns a JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Missing username or password"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error during login"
          }
        }
      }
    },
    "/user": {
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "User"
        ],
        "description": "Deletes a user specified by username.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully deleted"
          },
          "403": {
            "description": "Access denied or forbidden action"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error during deletion"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "summary": "User logout",
        "tags": [
          "User"
        ],
        "description": "Invalidates the logged-in user's token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Invalid token"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error during logout"
          }
        }
      }
    },
    "/features/ddos/start": {
      "get": {
        "summary": "Démarre un ping continu pour une adresse IP spécifiée.",
        "description": "Lance un ping toutes les secondes vers l'adresse IP donnée.",
        "tags": [
          "Feature - DDOS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ip",
            "required": true,
            "description": "L'adresse IP à pinguer.",
            "schema": {
              "type": "string",
              "example": "192.168.1.1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ping démarré avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message confirmant que le ping est en cours."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Le ping est déjà en cours pour cette adresse IP.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message d'erreur lorsque le ping est déjà en cours pour cette IP."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Message d'erreur en cas de problème serveur."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/ddos/stop": {
      "get": {
        "summary": "Arrête le ping en cours pour une adresse IP spécifiée.",
        "description": "Permet d'arrêter un ping en cours vers l'adresse IP donnée.",
        "tags": [
          "Feature - DDOS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ip",
            "required": true,
            "description": "L'adresse IP pour laquelle arrêter le ping.",
            "schema": {
              "type": "string",
              "example": "192.168.1.1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ping arrêté avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message confirmant que le ping a été arrêté."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Aucun ping en cours pour cette adresse IP.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message d'erreur lorsque aucun ping n'est en cours pour cette IP."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Message d'erreur en cas de problème serveur."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/email-existence": {
      "get": {
        "summary": "Verify an email address",
        "tags": [
          "Feature - Email Existence"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "description": "The email address to verify",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Verification status"
                    },
                    "result": {
                      "type": "string",
                      "description": "Additional information about the email"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Email is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/email-spammer": {
      "get": {
        "summary": "Send multiple emails to a recipient",
        "tags": [
          "Feature - Email spammer"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "description": "The recipient's email address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Number of emails to send",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emails sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Confirmation message with the number of emails sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (missing or invalid email/count)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message explaining the issue"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message if something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/generate-fake-identity": {
      "get": {
        "summary": "Génère une fausse identité et l'enregistre dans un fichier JSON",
        "tags": [
          "Feature - Fake Identity Generator"
        ],
        "responses": {
          "200": {
            "description": "Fausse identité générée et sauvegardée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indique si l'opération a réussi"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message confirmant la création du fichier"
                    },
                    "data": {
                      "type": "object",
                      "description": "Détails de l'identité générée",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "Prénom de la personne générée"
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Nom de famille de la personne générée"
                        },
                        "email": {
                          "type": "string",
                          "description": "Email de la personne générée"
                        },
                        "phone": {
                          "type": "string",
                          "description": "Numéro de téléphone généré"
                        },
                        "birthdate": {
                          "type": "string",
                          "format": "date",
                          "description": "Date de naissance générée"
                        },
                        "favoriteColor": {
                          "type": "string",
                          "description": "Couleur préférée générée"
                        },
                        "sex": {
                          "type": "string",
                          "description": "Sexe généré"
                        },
                        "bio": {
                          "type": "string",
                          "description": "Biographie générée"
                        },
                        "gender": {
                          "type": "string",
                          "description": "Genre généré"
                        },
                        "job": {
                          "type": "string",
                          "description": "Poste ou métier généré"
                        },
                        "address": {
                          "type": "object",
                          "description": "Adresse générée",
                          "properties": {
                            "street": {
                              "type": "string",
                              "description": "Rue de l'adresse"
                            },
                            "city": {
                              "type": "string",
                              "description": "Ville de l'adresse"
                            },
                            "state": {
                              "type": "string",
                              "description": "État ou région de l'adresse"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "Code postal"
                            },
                            "country": {
                              "type": "string",
                              "description": "Pays"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors de la génération ou de la sauvegarde",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indique si l'opération a échoué"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message d'erreur"
                    },
                    "error": {
                      "type": "string",
                      "description": "Détails de l'erreur"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/crawler": {
      "get": {
        "summary": "Recherche des résultats sur Google en fonction des paramètres fournis",
        "tags": [
          "Feature - Crawler"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "firstname",
            "required": true,
            "description": "Le prénom de la personne à rechercher.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lastname",
            "required": true,
            "description": "Le nom de famille de la personne à rechercher.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "countryCode",
            "required": true,
            "description": "Le code pays pour spécifier la localisation de la recherche.",
            "schema": {
              "type": "string",
              "example": "us"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultats de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Le titre de la page de résultats"
                      },
                      "link": {
                        "type": "string",
                        "description": "L'URL de la page"
                      },
                      "source": {
                        "type": "string",
                        "description": "La source de la page"
                      },
                      "description": {
                        "type": "string",
                        "description": "Un extrait de la page"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Paramètres manquants ou invalides",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Message d'erreur si un ou plusieurs paramètres sont manquants ou invalides"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Erreur lors de l'appel à SerpApi ou du traitement des résultats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Message d'erreur en cas de problème avec le serveur"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/check-password": {
      "get": {
        "summary": "Vérifie si un mot de passe est dans la liste des mots de passe les plus communs",
        "tags": [
          "Feature - Password check"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "password",
            "required": true,
            "description": "Le mot de passe à vérifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultat de la vérification du mot de passe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indiquant si le mot de passe est commun ou peu commun"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Le mot de passe est requis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Erreur indiquant que le mot de passe est requis"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Message d'erreur pour l'échec de la récupération des mots de passe"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/phishing-service": {
      "get": {
        "summary": "Scraper un site et générer un fichier HTML modifié",
        "tags": [
          "Feature - Phishing service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "description": "URL du site à scraper",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fichier HTML généré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message de succès avec l'emplacement du fichier généré"
                    },
                    "info": {
                      "type": "string",
                      "description": "L'URL pour récupérer les données soumises"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "L'URL est requise",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors du scraping du site",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Soumettre les données d'un formulaire",
        "tags": [
          "Feature - Phishing service"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "L'URL du site"
                  },
                  "[ autres champs du formulaire ]": {
                    "type": "string",
                    "description": "Autres données soumises par l'utilisateur"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Données reçues avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message de succès"
                    },
                    "submission": {
                      "type": "object",
                      "description": "Données soumises"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Aucune donnée valide trouvée dans le formulaire",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors de la soumission des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/phishing-service/datas": {
      "get": {
        "summary": "Récupérer toutes les soumissions de formulaires",
        "tags": [
          "Feature - Phishing service"
        ],
        "responses": {
          "200": {
            "description": "Liste des soumissions récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "site": {
                        "type": "string",
                        "description": "L'URL du site"
                      },
                      "[ autres champs du formulaire ]": {
                        "type": "string",
                        "description": "Autres données soumises"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Horodatage de la soumission"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Aucune soumission trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/random-image-person": {
      "get": {
        "summary": "Télécharge une image depuis \"https://thispersondoesnotexist.com\" et l'enregistre localement",
        "tags": [
          "Feature - Random image generator"
        ],
        "responses": {
          "200": {
            "description": "Image téléchargée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message confirmant que l'image a été téléchargée avec succès"
                    },
                    "path": {
                      "type": "string",
                      "description": "Chemin du fichier image téléchargé"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors du téléchargement de l'image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message d'erreur"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/retrieve-all-domains": {
      "get": {
        "summary": "Récupère tous les sous-domaines d'un domaine donné",
        "tags": [
          "Feature - Retrieve all domains & subdomains"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "domain",
            "required": true,
            "description": "Le nom de domaine pour lequel récupérer les sous-domaines",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sous-domaines récupérés avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "domain": {
                      "type": "string",
                      "description": "Le domaine principal"
                    },
                    "subdomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Domaine manquant",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/features/secure-password-generator": {
      "get": {
        "summary": "Génère un mot de passe sécurisé",
        "tags": [
          "Feature - Secure password generator"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "length",
            "required": false,
            "description": "La longueur du mot de passe à générer. Par défaut, il est de 12 caractères.",
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mot de passe généré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string",
                      "description": "Le mot de passe généré"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Longueur du mot de passe invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Message d'erreur concernant la longueur"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Message d'erreur pour tout problème survenu"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {

  },
  "tags": []
}